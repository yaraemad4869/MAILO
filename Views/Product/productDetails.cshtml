@using Mailo.Data.Enums
@model Product
@{
    ViewData["Title"] = "Product Details";
}
@{
var availableVariants = Model.Variants?.Where(v => v.Quantity > 0).ToList();
                bool isAddedToCart = Model.OrderProducts?.Any(op => op.order.user.Email == User.Identity.Name
                && op.order.OrderStatus == OrderStatus.New) ?? false;
                }
<div class="col-md-4 col-sm-6 d-flex justify-content-center">
    <div class="card shadow-sm position-relative" style="width: 18rem;">
            @if (availableVariants?.Any() == false)
            {
                <h6 class="text-white bg-danger position-absolute rounded-3" style=" top:5px; right:5px;padding:10px;">Sold Out</h6>
            }
            <img src="@Model.imageSrc" class="card-img-top" alt="@Model.Name">
        <div class="card-body">

                <h3 class="card-title fw-bold">@Model.Name</h3>
                <p class="card-text">@Model.Description</p>

                <h4 class="mt-2 text-primary">
                    @Model.TotalPrice.ToString("C")
                    @if (Model.TotalPrice != Model.Price)
                    {
                        <span class="text-muted fs-6">
                            <del class="text-danger">@Model.Price.ToString("C")</del>
                        </span>
                    }
                </h4>
            @if (availableVariants?.Any() == true)
            {
                <div class="d-flex justify-content-evenly">
                    <!-- Size Dropdown -->
                    <div class="form-group col-5 mb-2">
                        <label class="fw-bold">Size</label>
                        <select name="sizeSelect" class="form-control size-select" data-product-id="@Model.ID">
                            <option value="">Select Size</option>
                            @foreach (var variant in availableVariants.GroupBy(v => v.SizeId).Select(g => g.First()))
                            {
                                <option value="@variant.SizeId">@variant.Size?.SizeName</option>
                            }
                        </select>
                    </div>

                    <!-- Color Dropdown -->
                    <div class="form-group col-5 mb-2">
                        <label class="fw-bold">Color</label>
                        <select name="colorSelect" class="form-control color-select" data-product-id="@Model.ID" disabled>
                            <option value="">Select Color</option>
                        </select>
                    </div>
                </div>

                <div class="d-flex justify-content-evenly mt-2 w-100">
                    <form asp-action="AddProduct" asp-controller="Cart" method="post" class="col-5">
                        <input type="hidden" name="productId" value="@Model.ID" />
                        <input type="hidden" name="color" id="color_@Model.ID" value="" />
                        <input type="hidden" name="size" id="size_@Model.ID" value="" />
                        <input type="hidden" name="quantity" value="1" />
                        <button type="submit" class="btn btn-primary add-to-cart w-100" data-product-id="@Model.ID" disabled>
                            <i class="bi bi-cart-fill"></i>
                        </button>
                    </form>
                    <form asp-action="AddtoWishlist" asp-controller="Wishlist" method="post" class="col-5">
                        <input type="hidden" name="ID" value="@Model.ID" />
                        <input type="hidden" name="Name" value="@Model.Name" />
                        <input type="hidden" name="Price" value="@Model.Price" />
                        <input type="hidden" name="Description" value="@Model.Description" />
                        <input type="hidden" name="imageSrc" value="@Model.imageSrc" />
                        <button type="submit" class="btn btn-danger w-100">
                            <i class="bi bi-heart"></i>
                        </button>
                    </form>
                </div>
            }
            else
            {
                <h5 class="text-danger mt-3">Sold Out</h5>
                <form asp-action="AddtoWishlist" asp-controller="Wishlist" method="post" class="mt-5">
                    <input type="hidden" name="ID" value="@Model.ID" />
                    <input type="hidden" name="Name" value="@Model.Name" />
                    <input type="hidden" name="Price" value="@Model.Price" />
                    <input type="hidden" name="Description" value="@Model.Description" />
                    <input type="hidden" name="imageSrc" value="@Model.imageSrc" />
                    <button type="submit" class="btn btn-danger w-100">
                        <i class="bi bi-heart"></i> Add to Wishlist
                    </button>
                </form>
            }

        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const sizeSelects = document.querySelectorAll('.size-select');
            sizeSelects.forEach(sizeSelect => {
                sizeSelect.addEventListener('change', function () {
                    const productId = this.getAttribute('data-product-id');
                    const colorSelect = document.querySelector(`.color-select[data-product-id="${productId}"]`);
                    const addToCartButton = document.querySelector(`.add-to-cart[data-product-id="${productId}"]`);
                    const sizeInput = document.querySelector(`#size_${productId}`);

                    // Set the selected size in the hidden input
                    sizeInput.value = this.value;
                    console.log(`Size selected for product ${productId}:`, this.value); // Debugging

                    if (this.value) {
                        // Fetch available colors for the selected size
                        fetch(`/Cart/GetColorsForSize?productId=${productId}&sizeId=${this.value}`)
                            .then(response => response.json())
                            .then(data => {
                                console.log(`Colors fetched for product ${productId}:`, data); // Debugging
                                colorSelect.innerHTML = '<option value="">Select Color</option>';
                                data.forEach(color => {
                                    const option = document.createElement('option');
                                    option.value = color.colorId; // Ensure this returns the colorId
                                    option.textContent = color.colorName;
                                    colorSelect.appendChild(option);
                                });
                                colorSelect.disabled = false; // Enable the color dropdown
                            })
                            .catch(error => {
                                console.error('Error fetching colors:', error);
                            });
                    } else {
                        colorSelect.innerHTML = '<option value="">Select Color</option>';
                        colorSelect.disabled = true; // Disable the color dropdown
                        addToCartButton.disabled = true; // Disable the "Add to Cart" button
                    }
                });
            });

            const colorSelects = document.querySelectorAll('.color-select');
            colorSelects.forEach(colorSelect => {
                colorSelect.addEventListener('change', function () {
                    const productId = this.getAttribute('data-product-id');
                    const addToCartButton = document.querySelector(`.add-to-cart[data-product-id="${productId}"]`);
                    const colorInput = document.querySelector(`#color_${productId}`);

                    // Set the selected color in the hidden input
                    colorInput.value = this.value;
                    console.log(`Color selected for product ${productId}:`, this.value); // Debugging

                    if (this.value) {
                        addToCartButton.disabled = false;
                    } else {
                        addToCartButton.disabled = true;
                    }
                });
            });
        });
    </script>
}